!function(){$(function(){$.each($(".menu"),function(){new i($(this))}),$.each($(".hero"),function(){new o($(this))}),$.each($(".site__aside"),function(){new n($(this))}),$.each($(".content"),function(){new e($(this))})});var n=function(n){var e=this,i=n,o=function(){},t=function(){i.perfectScrollbar()},s=function(){i.perfectScrollbar("update")},c=function(){o(),t(),i[0].obj=e};e.updateScroll=function(){s()},c()},e=function(n){var e=n,i=function(){},o=function(){e.perfectScrollbar()},t=function(){i(),o()};t()},i=function(n){var e=n,i=$(".menu-mobile-btn"),o=e.find("a"),t=e.find(".menu__sub-menu"),s=$("body"),c=$(".site"),a=function(){u()},u=function(){c.on("click",function(n){if(o.hasClass("open")&&0==$(n.target).closest(e).length)return o.removeClass("open"),t.css("height",0),!1}),i.on("click",function(){var n=$(this);n.hasClass("close")?l():f()}),o.on("click",function(){var n=$(this),e=$(this).next("div");return n.next().is("div")&&!n.hasClass("open")?(r(n,e),!1):n.next().is("div")&&n.hasClass("open")?(h(n,e),!1):void 0})},f=function(){i.addClass("close"),e.addClass("visible"),s.css("overflow-y","hidden")},l=function(){i.removeClass("close"),e.removeClass("visible"),s.css("overflow-y","auto")},r=function(n,e){var i=n,o=e,t=o.find("ul").outerHeight();i.addClass("open"),o.css("height",t),$(".site__aside")[0].obj.updateScroll()},h=function(n,e){var i=n,o=e;i.removeClass("open"),o.css("height",0)};a()},o=function(n){var e,i=n,o=i.find(".hero__swiper"),t=function(){e=new Swiper(o,{autoplay:1e4,speed:500,effect:"fade",loop:!0})},s=function(){},c=function(){s(),t()};c()}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
