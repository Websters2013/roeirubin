!function(){$(function(){$.each($(".menu"),function(){new i($(this))}),$.each($(".hero"),function(){new o($(this))}),$.each($(".site__aside"),function(){new n($(this))}),$.each($(".content"),function(){new e($(this))})});var n=function(n){var e=this,i=n,o=function(){},t=function(){i.perfectScrollbar()},s=function(){i.perfectScrollbar("update")},c=function(){o(),t(),i[0].obj=e};e.updateScroll=function(){s()},c()},e=function(n){var e=n,i=function(){},o=function(){e.perfectScrollbar()},t=function(){i(),o()};t()},i=function(n){var e=n,i=$(".menu-mobile-btn"),o=e.find("a"),t=e.find(".menu__sub-menu"),s=$("body"),c=$(".site"),a=function(){u()},u=function(){c.on("click",function(n){if(o.hasClass("open")&&0==$(n.target).closest(e).length)return o.removeClass("open"),t.css("height",0),!1}),i.on("click",function(){var n=$(this);n.hasClass("close")?l():f()}),o.on("click",function(){var n=$(this),e=$(this).next("div");return n.next().is("div")&&!n.hasClass("open")?(r(n,e),!1):n.next().is("div")&&n.hasClass("open")?(h(n,e),!1):void 0})},f=function(){i.addClass("close"),e.addClass("visible"),s.css("overflow-y","hidden")},l=function(){i.removeClass("close"),e.removeClass("visible"),s.css("overflow-y","auto")},r=function(n,e){var i=n,o=e,t=o.find("ul").outerHeight();i.addClass("open"),o.css("height",t),$(".site__aside")[0].obj.updateScroll()},h=function(n,e){var i=n,o=e;i.removeClass("open"),o.css("height",0)};a()},o=function(n){var e,i=n,o=i.find(".hero__swiper"),t=function(){e=new Swiper(o,{autoplay:1e4,speed:500,effect:"fade",loop:!0})},s=function(){},c=function(){s(),t()};c()}}();
!function(){"use strict";$(function(){$(".validation-form").length&&new t($(".validation-form"))});var t=function(t){var a=t,n=a.find(".contacts__message_error"),s=a.find(".contacts__message_success"),e=a.find(".contacts__message-wrap"),i=a.find("input, textarea"),o=a.find("[data-required]"),l=new XMLHttpRequest,u=function(){r()},c=function(){o.each(function(){var t=$(this);""===t.val()&&(t.addClass("not-touched"),m(t))}),$("#comments__rate-input").hasClass("not-touched")&&$("#comments__rate").addClass("not-valid")},r=function(){o.on({focus:function(){$(this).removeClass("not-touched")},focusout:function(){var t=$(this);m(t)},keyup:function(){var t=$(this);t.hasClass("not-valid")&&m(t)}}),i.on({focusout:function(){var t=0;i.each(function(){var a=$(this);a.val().length>0&&(t+=1)}),0===t&&(i.removeClass("not-valid"),n.removeClass("visible"))}}),a.on({submit:function(){return c(),0!==o.filter(".not-valid").length&&(n.addClass("visible"),e.css("height",n.outerHeight())),o.hasClass("not-touched")||o.hasClass("not-valid")?(a.find(".not-touched:first").focus(),a.find(".not-valid:first").focus(),!1):(d(),!1)}})},d=function(){l=$.ajax({url:$("body").data("mail"),data:{name:$("input[name=name]").val(),email:$("input[name=email]").val(),phone:$("input[name=phone]").val()},dataType:"json",type:"GET",success:function(t){1==t&&(s.addClass("visible"),e.css("height",s.outerHeight()))},error:function(t){"abort"!=t.statusText&&console.log("err")}})},v=function(t){t.addClass("not-valid"),t.removeClass("valid"),$("#comments__rate-input").hasClass("not-valid")&&$("#comments__rate").addClass("not-valid")},f=function(t){t.removeClass("not-valid"),t.addClass("valid")},h=function(t){var a=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return a.test(t)},m=function(t){var a=t.attr("type");t[0].tagName;return("email"!==a&&"text"!==a&&"tel"!==a||""!==t.val())&&("email"!==a||h(t.val()))?(f(t),void(0===o.filter(".not-valid").length&&(n.removeClass("visible"),e.css("height",0)))):(v(t),!1)};u()}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
